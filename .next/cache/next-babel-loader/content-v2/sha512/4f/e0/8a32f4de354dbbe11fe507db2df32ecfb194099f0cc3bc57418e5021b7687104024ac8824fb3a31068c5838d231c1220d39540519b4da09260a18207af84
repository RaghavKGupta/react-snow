{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Link from 'next/link';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\nfunction display(accordion) {\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"h4\", {\n        class: \"usa-accordion__heading\",\n        children: /*#__PURE__*/_jsx(\"button\", {\n          class: \"usa-accordion__button\",\n          \"aria-expanded\": \"false\",\n          \"aria-controls\": accordion.index,\n          children: accordion.heading\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        id: accordion.index,\n        class: \"usa-accordion__content usa-prose\",\n        hidden: true,\n        children: ReactHtmlParser(accordion.body)\n      })]\n    }, accordion.index)\n  });\n}\n\nfunction getList(accordion) {\n  var b = [];\n\n  for (let index = 1; index <= accordion.number_of_accordions_needed; index++) {\n    b.push({\n      index: `a${index}`,\n      heading: accordion[`accordion_${index}_heading`],\n      body: accordion[`accordion_${index}_body`]\n    });\n  }\n\n  return b;\n}\n\nconst Accordion = ({\n  accordion\n}) => {\n  var mapping = getList(accordion);\n  return /*#__PURE__*/_jsx(\"div\", {\n    class: \"usa-accordion\",\n    children: mapping.map(x => display(x))\n  });\n};\n\nexport default Accordion;","map":null,"metadata":{},"sourceType":"module"}