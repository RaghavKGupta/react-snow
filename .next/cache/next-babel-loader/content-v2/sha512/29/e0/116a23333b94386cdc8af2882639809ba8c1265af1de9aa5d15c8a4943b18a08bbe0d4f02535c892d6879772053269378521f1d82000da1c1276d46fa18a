{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rgupta/Documents/GitHub/react-snow/pages/article/[id]/index.js\",\n    _this = this;\n\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport Meta from '../../../components/Meta';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport Accordion from '../../../components/Accordion';\nimport Card from '../../../components/Card';\n\nvar reactStringReplace = require('react-string-replace');\n\nvar article = function article(_ref) {\n  var article = _ref.article;\n  var a = article.result.body;\n  var splitText = a.split(/(#.*#)/gm);\n  var b = reactStringReplace(a, '#%accordion%#', function (match, i) {\n    return /*#__PURE__*/_jsxDEV(Accordion, {\n      accordion: article.result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, _this);\n  });\n  var c = reactStringReplace(b, '##%card%##', function (match, i) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      card: article.result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: article.result.name_of_page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n      \"class\": \"usa-tag\",\n      children: article.result.sys_updated_on\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this), splitText.forEach(function (element) {\n      if (element.includes('#%accordion%#')) {\n        return /*#__PURE__*/_jsxDEV(Accordion, {\n          accordion: article.result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }, _this);\n      } else if (element.includes('##%card%##')) {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          card: article.result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 18\n        }, _this);\n      } else {\n        return ReactHtmlParser(element);\n      }\n    }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\nexport var __N_SSG = true;\nexport default article;","map":{"version":3,"sources":["/Users/rgupta/Documents/GitHub/react-snow/pages/article/[id]/index.js"],"names":["Link","useRouter","Meta","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","Accordion","Card","reactStringReplace","require","article","a","result","body","splitText","split","b","match","i","c","name_of_page","sys_updated_on","forEach","element","includes"],"mappings":";;;;;;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,eAAP,IAA0BC,YAA1B,EAAwCC,oBAAxC,EAA8DC,WAA9D,QAAiF,mBAAjF;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;;AACA,IAAMC,kBAAkB,GAAGC,OAAO,CAAC,sBAAD,CAAlC;;AAEA,IAAMC,OAAO,GAAG,uBAAiB;AAAA,MAAdA,OAAc,QAAdA,OAAc;AAC/B,MAAIC,CAAC,GAAGD,OAAO,CAACE,MAAR,CAAeC,IAAvB;AACA,MAAIC,SAAS,GAAGH,CAAC,CAACI,KAAF,CAAQ,UAAR,CAAhB;AACA,MAAIC,CAAC,GAAIR,kBAAkB,CAACG,CAAD,EAAI,eAAJ,EAAqB,UAACM,KAAD,EAAQC,CAAR;AAAA,wBAC9C,QAAC,SAAD;AAAW,MAAA,SAAS,EAAER,OAAO,CAACE;AAA9B;AAAA;AAAA;AAAA;AAAA,aAD8C;AAAA,GAArB,CAA3B;AAGA,MAAIO,CAAC,GAAIX,kBAAkB,CAACQ,CAAD,EAAI,YAAJ,EAAkB,UAACC,KAAD,EAAQC,CAAR;AAAA,wBAC3C,QAAC,IAAD;AAAM,MAAA,IAAI,EAAER,OAAO,CAACE;AAApB;AAAA;AAAA;AAAA;AAAA,aAD2C;AAAA,GAAlB,CAA3B;AAIA,sBACE;AAAA,4BACE;AAAA,gBAAKF,OAAO,CAACE,MAAR,CAAeQ;AAApB;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAM,eAAM,SAAZ;AAAA,gBAAuBV,OAAO,CAACE,MAAR,CAAeS;AAAtC;AAAA;AAAA;AAAA;AAAA,aAFF,EAIGP,SAAS,CAACQ,OAAV,CAAkB,UAAAC,OAAO,EAAI;AAC9B,UAAGA,OAAO,CAACC,QAAR,CAAiB,eAAjB,CAAH,EAAqC;AACnC,4BAAO,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEd,OAAO,CAACE;AAA9B;AAAA;AAAA;AAAA;AAAA,iBAAP;AACC,OAFH,MAES,IAAIW,OAAO,CAACC,QAAR,CAAiB,YAAjB,CAAJ,EAAmC;AACxC,4BAAO,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEd,OAAO,CAACE;AAApB;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD,OAFM,MAEA;AACL,eAAOV,eAAe,CAACqB,OAAD,CAAtB;AACD;AACF,KARA,CAJH,eAcE;AAAA;AAAA;AAAA;AAAA,aAdF,eAeE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAfF;AAAA,kBADF;AAmBD,CA7BD;;;AAmEA,eAAeb,OAAf","sourcesContent":["import { username, psd } from '../../../config'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\nimport Meta from '../../../components/Meta'\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport Accordion from '../../../components/Accordion';\nimport Card from '../../../components/Card';\nconst reactStringReplace = require('react-string-replace');\n\nconst article = ({ article }) => {\n  let a = article.result.body\n  let splitText = a.split(/(#.*#)/gm)\n  let b = (reactStringReplace(a, '#%accordion%#', (match, i) => (\n    <Accordion accordion={article.result}></Accordion>\n)))\n  let c = (reactStringReplace(b, '##%card%##', (match, i) => (\n    <Card card={article.result}></Card>\n))) \n\n  return (\n    <>\n      <h1>{article.result.name_of_page}</h1>\n      <span class=\"usa-tag\">{article.result.sys_updated_on}</span>\n     \n      {splitText.forEach(element => {\n      if(element.includes('#%accordion%#')){\n        return <Accordion accordion={article.result}></Accordion>\n        } else if (element.includes('##%card%##')){\n          return <Card card={article.result}></Card>\n        } else {\n          return ReactHtmlParser(element)\n        }\n      })}\n      \n      <br />\n      <Link href='/'>Go Back</Link>\n    </>\n  )\n}\n\nexport const getStaticProps = async (context) => {\n  const res = await fetch(`https://dev69061.service-now.com/api/now/table/x_682526_page_bu_0_cwig_page_builder/${context.params.id}`, {\n    method: 'get',\n    headers: {\n      'Authorization': 'Basic ' + btoa(`${username}:${psd}`)\n      }\n  })\n\n  const article = await res.json()\n\n  return {\n    props: {\n      article,\n    },\n  }\n}\n\nexport const getStaticPaths = async () => {\n  const res = await fetch(`https://dev69061.service-now.com/api/now/table/x_682526_page_bu_0_cwig_page_builder`, {\n    method: 'get',\n    headers: {\n      'Authorization': 'Basic ' + btoa(`${username}:${psd}`)\n      }\n  })\n\n  const articles = await res.json()\n\n  const ids = articles.result.map((article) => article.sys_id)\n  const paths = ids.map((id) => ({ params: { id: id.toString() } }))\n\n  return {\n    paths,\n    fallback: false,\n  }\n}\n\nexport default article\n"]},"metadata":{},"sourceType":"module"}