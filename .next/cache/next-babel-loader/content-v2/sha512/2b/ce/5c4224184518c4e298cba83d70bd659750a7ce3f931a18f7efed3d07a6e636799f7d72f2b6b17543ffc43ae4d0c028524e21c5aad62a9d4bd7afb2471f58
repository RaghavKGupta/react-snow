{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rgupta/Documents/GitHub/react-snow/components/Accordion.js\";\nimport Link from 'next/link';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\nfunction display(accordion) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        class: \"usa-accordion__heading\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"usa-accordion__button\",\n          \"aria-expanded\": \"false\",\n          \"aria-controls\": accordion.index,\n          children: accordion.heading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: accordion.index,\n        class: \"usa-accordion__content usa-prose\",\n        hidden: true,\n        children: ReactHtmlParser(accordion.body)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this)]\n    }, accordion.index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\nfunction getList(accordion) {\n  var b = [];\n\n  for (let index = 1; index <= accordion.number_of_accordions_needed; index++) {\n    b.push({\n      index: `a${index}`,\n      heading: accordion[`accordion_${index}_heading`],\n      body: accordion[`accordion_${index}_body`]\n    });\n  }\n\n  return b;\n}\n\nconst Accordion = ({\n  accordion\n}) => {\n  var mapping = getList(accordion);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"usa-accordion\",\n    children: mapping.map(x => display(x))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Accordion;","map":{"version":3,"sources":["/Users/rgupta/Documents/GitHub/react-snow/components/Accordion.js"],"names":["Link","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","display","accordion","index","heading","body","getList","b","number_of_accordions_needed","push","Accordion","mapping","map","x"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,eAAP,IAA0BC,YAA1B,EAAwCC,oBAAxC,EAA8DC,WAA9D,QAAiF,mBAAjF;;AAEA,SAASC,OAAT,CAAiBC,SAAjB,EAA4B;AACpB,sBAAO;AAAA,2BACP;AAAA,8BACA;AAAI,QAAA,KAAK,EAAC,wBAAV;AAAA,+BACA;AAAQ,UAAA,KAAK,EAAC,uBAAd;AACE,2BAAc,OADhB;AAEE,2BAAeA,SAAS,CAACC,KAF3B;AAAA,oBAGGD,SAAS,CAACE;AAHb;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADA,eAQF;AAAK,QAAA,EAAE,EAAEF,SAAS,CAACC,KAAnB;AAA0B,QAAA,KAAK,EAAC,kCAAhC;AAAmE,QAAA,MAAM,MAAzE;AAAA,kBACCN,eAAe,CAACK,SAAS,CAACG,IAAX;AADhB;AAAA;AAAA;AAAA;AAAA,cARE;AAAA,OAAUH,SAAS,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AADO,mBAAP;AAeP;;AAED,SAASG,OAAT,CAAkBJ,SAAlB,EAA6B;AAC7B,MAAIK,CAAC,GAAG,EAAR;;AACI,OAAK,IAAIJ,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAID,SAAS,CAACM,2BAAvC,EAAoEL,KAAK,EAAzE,EAA6E;AACzEI,IAAAA,CAAC,CAACE,IAAF,CAAO;AAACN,MAAAA,KAAK,EAAE,IAAGA,KAAM,EAAjB;AAAmBC,MAAAA,OAAO,EAACF,SAAS,CAAE,aAAYC,KAAM,UAApB,CAApC;AAAmEE,MAAAA,IAAI,EAACH,SAAS,CAAE,aAAYC,KAAM,OAApB;AAAjF,KAAP;AACH;;AACL,SAAOI,CAAP;AACC;;AAED,MAAMG,SAAS,GAAG,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAmB;AACjC,MAAIS,OAAO,GAAGL,OAAO,CAACJ,SAAD,CAArB;AACF,sBACE;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA,cACIS,OAAO,CAACC,GAAR,CAAYC,CAAC,IAAIZ,OAAO,CAACY,CAAD,CAAxB;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAPD;;AAQA,eAAeH,SAAf","sourcesContent":["import Link from 'next/link'\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\nfunction display(accordion) {\n        return <>\n        <div key={accordion.index}>\n        <h4 class=\"usa-accordion__heading\">\n        <button class=\"usa-accordion__button\"\n          aria-expanded=\"false\"\n          aria-controls={accordion.index}>\n          {accordion.heading}\n        </button>\n      </h4>\n      <div id={accordion.index} class=\"usa-accordion__content usa-prose\" hidden>\n      {ReactHtmlParser(accordion.body)}\n      </div>\n\n        </div> \n      </>\n}\n\nfunction getList (accordion) {\nvar b = []\n    for (let index = 1; index <= accordion.number_of_accordions_needed; index++) {\n        b.push({index:`a${index}`,heading:accordion[`accordion_${index}_heading`],body:accordion[`accordion_${index}_body`]})\n    }\nreturn b\n}\n\nconst Accordion = ({ accordion }) => {\n    var mapping = getList(accordion)\n  return (\n    <div class=\"usa-accordion\">\n       {mapping.map(x => display(x))} \n    </div>\n  )\n}\nexport default Accordion\n"]},"metadata":{},"sourceType":"module"}