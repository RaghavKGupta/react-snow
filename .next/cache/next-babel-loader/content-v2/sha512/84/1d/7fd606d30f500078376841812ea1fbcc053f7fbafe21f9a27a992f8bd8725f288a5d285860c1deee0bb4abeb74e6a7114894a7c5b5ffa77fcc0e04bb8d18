{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rgupta/Documents/GitHub/react-snow/components/Accordion.js\";\nimport Link from 'next/link';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\nfunction display(accordion) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      class: \"usa-accordion__heading\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"usa-accordion__button\",\n        \"aria-expanded\": \"false\",\n        \"aria-controls\": \"a1\",\n        children: accordion.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"a1\",\n      class: \"usa-accordion__content usa-prose\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: ReactHtmlParser(accordion.body)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nfunction getList(accordion) {\n  var b = [];\n\n  for (let index = 1; index <= accordion.number_of_accordions_needed; index++) {\n    b.push({\n      index: index,\n      heading: accordion[`accordion_${index}_heading`],\n      body: accordion[`accordion_${index}_body`]\n    });\n  }\n\n  return b;\n}\n\nconst Accordion = ({\n  accordion\n}) => {\n  var mapping = getList(accordion);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"usa-accordion\",\n    children: mapping.map(x => display(x))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Accordion;","map":{"version":3,"sources":["/Users/rgupta/Documents/GitHub/react-snow/components/Accordion.js"],"names":["Link","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","display","accordion","heading","body","getList","b","index","number_of_accordions_needed","push","Accordion","mapping","map","x"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,eAAP,IAA0BC,YAA1B,EAAwCC,oBAAxC,EAA8DC,WAA9D,QAAiF,mBAAjF;;AAGA,SAASC,OAAT,CAAiBC,SAAjB,EAA4B;AACpB,sBAAO;AAAA,4BACH;AAAI,MAAA,KAAK,EAAC,wBAAV;AAAA,6BACJ;AAAQ,QAAA,KAAK,EAAC,uBAAd;AACE,yBAAc,OADhB;AAEE,yBAAc,IAFhB;AAAA,kBAGGA,SAAS,CAACC;AAHb;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,YADG,eAQT;AAAK,MAAA,EAAE,EAAC,IAAR;AAAa,MAAA,KAAK,EAAC,kCAAnB;AAAA,6BACA;AAAA,kBAAIN,eAAe,CAACK,SAAS,CAACE,IAAX;AAAnB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YARS;AAAA,kBAAP;AAYP;;AAED,SAASC,OAAT,CAAkBH,SAAlB,EAA6B;AAC7B,MAAII,CAAC,GAAG,EAAR;;AACI,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAIL,SAAS,CAACM,2BAAvC,EAAoED,KAAK,EAAzE,EAA6E;AACzED,IAAAA,CAAC,CAACG,IAAF,CAAO;AAACF,MAAAA,KAAK,EAACA,KAAP;AAAaJ,MAAAA,OAAO,EAACD,SAAS,CAAE,aAAYK,KAAM,UAApB,CAA9B;AAA6DH,MAAAA,IAAI,EAACF,SAAS,CAAE,aAAYK,KAAM,OAApB;AAA3E,KAAP;AACH;;AACL,SAAOD,CAAP;AACC;;AAED,MAAMI,SAAS,GAAG,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAmB;AACjC,MAAIS,OAAO,GAAGN,OAAO,CAACH,SAAD,CAArB;AACF,sBACE;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA,cACIS,OAAO,CAACC,GAAR,CAAYC,CAAC,IAAIZ,OAAO,CAACY,CAAD,CAAxB;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAPD;;AAQA,eAAeH,SAAf","sourcesContent":["import Link from 'next/link'\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\n\nfunction display(accordion) {\n        return <>\n            <h4 class=\"usa-accordion__heading\">\n        <button class=\"usa-accordion__button\"\n          aria-expanded=\"false\"\n          aria-controls='a1'>\n          {accordion.heading}\n        </button>\n      </h4>\n      <div id=\"a1\" class=\"usa-accordion__content usa-prose\">\n      <p>{ReactHtmlParser(accordion.body)}</p>\n      </div> \n      </>\n}\n\nfunction getList (accordion) {\nvar b = []\n    for (let index = 1; index <= accordion.number_of_accordions_needed; index++) {\n        b.push({index:index,heading:accordion[`accordion_${index}_heading`],body:accordion[`accordion_${index}_body`]})\n    }\nreturn b\n}\n\nconst Accordion = ({ accordion }) => {\n    var mapping = getList(accordion)\n  return (\n    <div class=\"usa-accordion\">\n       {mapping.map(x => display(x))} \n    </div>\n  )\n}\nexport default Accordion\n"]},"metadata":{},"sourceType":"module"}