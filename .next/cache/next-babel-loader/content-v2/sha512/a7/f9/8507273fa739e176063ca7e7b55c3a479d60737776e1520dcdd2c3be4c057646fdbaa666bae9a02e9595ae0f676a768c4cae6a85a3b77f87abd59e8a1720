{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rgupta/Documents/GitHub/react-snow/components/Accordion.js\",\n    _this = this;\n\nimport Link from 'next/link';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\nfunction display(accordion) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      \"class\": \"usa-accordion__heading\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        \"class\": \"usa-accordion__button\",\n        \"aria-expanded\": \"false\",\n        \"aria-controls\": accordion.index,\n        children: accordion.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: accordion.index,\n      \"class\": \"usa-accordion__content usa-prose\",\n      hidden: true,\n      children: ReactHtmlParser(accordion.body)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, accordion.index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 17\n  }, this);\n}\n\nfunction getList(accordion) {\n  var b = [];\n\n  for (var index = 1; index <= accordion.number_of_accordions_needed; index++) {\n    b.push({\n      index: \"a\".concat(index),\n      heading: accordion[\"accordion_\".concat(index, \"_heading\")],\n      body: accordion[\"accordion_\".concat(index, \"_body\")]\n    });\n  }\n\n  return b;\n}\n\nvar Accordion = function Accordion(_ref) {\n  var accordion = _ref.accordion;\n  var mapping = getList(accordion);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"class\": \"usa-accordion\",\n    children: mapping.map(function (x) {\n      return display(x);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Accordion;\nexport default Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/Users/rgupta/Documents/GitHub/react-snow/components/Accordion.js"],"names":["Link","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","display","accordion","index","heading","body","getList","b","number_of_accordions_needed","push","Accordion","mapping","map","x"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,eAAP,IAA0BC,YAA1B,EAAwCC,oBAAxC,EAA8DC,WAA9D,QAAiF,mBAAjF;;AAEA,SAASC,OAAT,CAAiBC,SAAjB,EAA4B;AACpB,sBAAQ;AAAA,4BACN;AAAI,eAAM,wBAAV;AAAA,6BACA;AAAQ,iBAAM,uBAAd;AACE,yBAAc,OADhB;AAEE,yBAAeA,SAAS,CAACC,KAF3B;AAAA,kBAGGD,SAAS,CAACE;AAHb;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADM,eAQR;AAAK,MAAA,EAAE,EAAEF,SAAS,CAACC,KAAnB;AAA0B,eAAM,kCAAhC;AAAmE,MAAA,MAAM,MAAzE;AAAA,gBACCN,eAAe,CAACK,SAAS,CAACG,IAAX;AADhB;AAAA;AAAA;AAAA;AAAA,YARQ;AAAA,KAAUH,SAAS,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA,UAAR;AAaP;;AAED,SAASG,OAAT,CAAkBJ,SAAlB,EAA6B;AAC7B,MAAIK,CAAC,GAAG,EAAR;;AACI,OAAK,IAAIJ,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAID,SAAS,CAACM,2BAAvC,EAAoEL,KAAK,EAAzE,EAA6E;AACzEI,IAAAA,CAAC,CAACE,IAAF,CAAO;AAACN,MAAAA,KAAK,aAAKA,KAAL,CAAN;AAAmBC,MAAAA,OAAO,EAACF,SAAS,qBAAcC,KAAd,cAApC;AAAmEE,MAAAA,IAAI,EAACH,SAAS,qBAAcC,KAAd;AAAjF,KAAP;AACH;;AACL,SAAOI,CAAP;AACC;;AAED,IAAMG,SAAS,GAAG,SAAZA,SAAY,OAAmB;AAAA,MAAhBR,SAAgB,QAAhBA,SAAgB;AACjC,MAAIS,OAAO,GAAGL,OAAO,CAACJ,SAAD,CAArB;AACF,sBACE;AAAK,aAAM,eAAX;AAAA,cACIS,OAAO,CAACC,GAAR,CAAY,UAAAC,CAAC;AAAA,aAAIZ,OAAO,CAACY,CAAD,CAAX;AAAA,KAAb;AADJ;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAPD;;KAAMH,S;AAQN,eAAeA,SAAf","sourcesContent":["import Link from 'next/link'\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\nfunction display(accordion) {\n        return (<div key={accordion.index}>\n          <h4 class=\"usa-accordion__heading\">\n          <button class=\"usa-accordion__button\"\n            aria-expanded=\"false\"\n            aria-controls={accordion.index}>\n            {accordion.heading}\n          </button>\n        </h4>\n        <div id={accordion.index} class=\"usa-accordion__content usa-prose\" hidden>\n        {ReactHtmlParser(accordion.body)}\n        </div>\n  \n          </div>)\n}\n\nfunction getList (accordion) {\nvar b = []\n    for (let index = 1; index <= accordion.number_of_accordions_needed; index++) {\n        b.push({index:`a${index}`,heading:accordion[`accordion_${index}_heading`],body:accordion[`accordion_${index}_body`]})\n    }\nreturn b\n}\n\nconst Accordion = ({ accordion }) => {\n    var mapping = getList(accordion)\n  return (\n    <div class=\"usa-accordion\">\n       {mapping.map(x => display(x))} \n    </div>\n  )\n}\nexport default Accordion\n"]},"metadata":{},"sourceType":"module"}